*도구 
-dotenv - env에서 개인키, 노드 api가져옴.
-alchemy노드
-web3 - js를 사용해 이더리움과 통신할 수 있는 라이브러리.

*기본 정보
1.alchemy(호스트 노드)와 개인키를 공유하면 안된다.
2.signer는 개인키를 사용해 트랜잭션에 서명한다.
이때 사용하는 것이 web3라이브러리이다.
프론트엔드에서는 메타마스크가 이러한 역할을 해준다.
3.서명을 해야 하는 이유는 이더리움 네트워크에서 트랜잭션을 보내려는 모든 사용자는 
트랜잭션의 출처가 주장하는 사람인지 확인해야 하기 때문이다.
4..env 파일을 사용한다.
5.eth_sendTransaction vs eth_sendRawTransaction
eth_sendTransaction
서명되지 않은 트랜잭션을 보낸다. 
보내는 노드는 개인 키를 관리해야 체인에 브로드캐스트하기전에 트랜잭션에 서명할 수 있다.
alchemy는 개인키를 보유하지 않기 때문에 이 방법 지원x
eth_sendRawTransaction 이미 서명된 트랜잭션을 브로드 캐스트하는데 사용.
web3.eth.sendSignedTransaction를 사용하여 해당 함수를 호출할 수 있다.
6.web3 라이브러리란?
이더리움 개발에서 흔히 json-rpc 표준 호출을 돕는 라이브러리이다.

*거래를 보는 단계
1.alchemy 앱 만들기.
2.로컬에 프로젝트 폴더 만들고 web3, dotenv 라이브러리 다운로드
3..env파일 생성(alchemy노드 api url, 개인 키 보관)
4.sendTx.js 파일 생성.

트랜잭션에 두 가지 주요 유형
-잔액 이체 : 한 주소에서 다른 주소로 eth를 보냄.
-스마트 컨택트 트랜잭션 : 체인에서 일부 스마트 계약 코드를 실행한다.
