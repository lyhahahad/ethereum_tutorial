*https://ethereum.org/en/developers/tutorials/how-to-write-and-deploy-an-nft/
alchemy를 이용해 스마트 계약을 배포한다.

*과정 정리.
필요한 도구 : alchemy(이더리움과 연결 점.), hardhat(컴파일, 배포, 테스트, 디버그), openzeppelin(표준에 맞게 미리 구현된 라이브러리) ethers.js(이더리움 블록체인과 연결할 때 사용하는 라이브러리)
메타마스크(지갑)
1.alchemy를 앱 만들기(블록체인을 통신할 node url 얻기.)
2.'npm init' 프로젝트 만들기.
3.hardhat 설치, 컴파일, 배포, 테스트, 디버그 개발 환경.
4.'npx 프로젝트 이름' hardhat.config.js 모든 설정 관리하는 파일 생성
5.contracts, scripts 폴더 만들기 전자는 스마트 컨트랙트 코드 보관 후자는 배포할 스크립트 보관.
6.contract 작성 - openzeppelin 사용(erc-721 구현된 라이브러리)
7.metamask&alchemy 프로젝트 연결 dotenv 패키지 설치. alchemy에서 api url가져오기, .env파일에 컨트랙트 생성할 지갑의 프라이빗키와 url입력
8.이더리움과 상호작용할 때 필요한 ethers.js설치.
9.hardhat.config.js 업데이트, dotenv, ethers.js
10.'npx hardhat compile' 컨트랙트 컴파일
11.scripts 폴더에 배포 스크립트 작성(ethers.js 사용)
12. 계약 배포 npx hardhat --network ropsten run scripts/deploy.js
13. 배포 주소 확인.

*https://ethereum.org/en/developers/tutorials/how-to-mint-an-nft/

과정 정리
필요한 도구 : web3 라이브러리(ethers와 유사한 역할), pinta
메타데이터를 생성하고 mint
1.'npm install @alch/alchemy-web3' 이더리움 블록체인과 통신하는데 사용하는 라이브러리
2. scripts 폴더에 mint-nft.js 파일 생성.
3. 계약 abi 확보하기.abi는 스마트 계약과 상호작용하기 위한 인터페이스(mynft.json)
4.ipfs에 메타데이터 저장하기.
5.mint-nft.js에 스마트컨트랙트 주소, abi사용해 계약 생성.
6..env파일 수정.
7.트랜잭션 생성 코드 추가(from, to, nonce, gas, data)
8.배포 코드 실행.

추가적으로 알아 볼 것.
0.전체 과정 복습.
1.doenv 역할
2.배포 코드 인자까지 분석.
3.providererror: must be authenticated! at httpprovider.request 해당 오류 내 해석 맞는지 체크

contracts에 계약을 작성하고 컴파일할 때의 명령어 : 'npx hardhat compile'
컴파일 하게 되면 cache, artifacts 폴더가 만들어진다.
컴파일 후 배포 코드 scripts에 작성
작성 후 배포 명령어 실행 : npx hardhat --network ropsten run scripts/deploy.js

-오류 해결.
.env에 api_url을 제대로 입력하지 않으면 
'providererror: must be authenticated! at httpprovider.request'
providererror이 발생한다.
추측 : deploy이 하기 위해서는 이더리움의 노드와 연결해야 하는데 노드의 api키를 승인받지 않은 채널로 잘못 연결했기 때문이다.
수정후 아직 해당 지갑에 이더가 없어 아래 에러 발생.
'insufficient funds for intrinsic transaction cost'

*https://ethereum.org/en/developers/tutorials/how-to-mint-an-nft/
지갑이 원하는 만큼 nft를 발행할 수 있도록 한다.

추가적으로 알아 볼 것.
1.abi

1~3번
1.web3 라이브러리 : ethers와 유사한 역할을 하는 라이브러리로
이더리움 블록체인에 요청을 더 쉽게 생성하는데 사용된다.
2.mint-nft.js 생성
해당 파일은 nft를 민팅하는 요청을 생성하는 js파일
4.ipfs : ipfs api 및 툴킷인 pinata를 사용하여 메타데이터 저장 가능.
