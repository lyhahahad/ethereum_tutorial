하이라이트
1.dapp = ui + smart contract 구조이다.
2.drizzle은 react를 사용해 dapp을 개발할 수 있도록 하는 기본 모듈들을 담은 truffle box이다.
3.erc-721도 결국 소유권을 담는 표준이다.
4.erc-721은 솔리디티 인터페이스로 그자체는 생성자와 상태 변수를 가질 수 없다. 설계 정도 라고 생각하면 된다.
함수는 외부에서 참조해야 하기 때문에 external로 구현돼 있다.
5.erc721 명세 파악하기.
6.metadata, enumerable과 같은 확장 인터페이스가 존재한다. 각각 함수가 존재한다.

이더리움 dapp구조
백엔드는 스마트컨트랙트 + 프론트엔드는 기존의 다른 프로그램들과 동의
툴 : drizzle-react(truffle box 중 하나), 모듈 설치 간소화, 즉시 사용한 코드들을 미리 작성해서 개발자들에게 제공해줌.
react로 dapp 개발할 때 사용하는 것이 drizzle이다. 
거의 모든 필요한 모듈 셋팅해줌.
dapp = ui + smart contract

토큰 
이더리움은 공용 코인 eth 외에 누구나 임의의 토큰을 발행할 수 있는 표준을 제공함.
erc-20, erc-721 

erc-721
non-fungible, 서로 가치가 상이하여 교환할 수 없는 것, 대체 불가.
nft는 권리증이다.
특정 자산id를 누가 소유하고 있다는 것을 저장하는 것이 erc-721이다.
자산id + 소유계정 = erc-721이다.
모든 블록체인의 표준이 그렇듯 결국 소유권의 저장이 핵심이다.

nft = 
non fungible(유일한, 그것을 가리키는 토큰 아이디)
+
deep(소유권 증명, ex 부동산 등기 권리증)
정의 방식 = 솔리디티 인터페이스
인터페이스 = 구현부(body)가 전혀 없이 함수를 선언한 컨트랙트. 구현은 안하고 선언만 한 것이다.
함수는 external로 선언돼있어야 한다. 생성자와 상태 변수를 가질수도 없음.
다중 인터페이스는 가능.
상속을 통한 구현 is를 통해 구현
erc721은 쉽게 말해 솔리디티에 있는 소유권, non fungible 성질을 갖고 있는 인터페이스(추상 클래스)이다.
메인 인터페이스 이외에도 erc721tokenreceiver, metatdata, enumerable과 같은 확장 인터페이스가 있다.

기타 사항, 표준 문서에 정리된 것들
1.솔리디티 컴파일러의 버전에 따라 함수의 정의가 변경된다. = erc721 인터페이스의 정의가 달라질 수 있다.(solc 버전 유의)
2. 명시적인 mutability = 읽기만 하냐, 상태변수 바꿀 수 있냐, 무관하냐를 정의하는 부분
payable로 정의된 함수를 약한 mutability라고 한다. 약하게 mutability를 제한하고 있다는 의미이다.
payable은 이더를 받을 수 있고 밸런스를 변경한다. 구현 목적에 맞게 해당 부분을 바꿀 수 있다.
external을 public으로 바꿀 수 있다.
토큰 id는 컨트랙트주소 + 토큰 id이다. 이더리움 내에서 유일하다.

mutability에서 상태는 이더리움 상태 머신의 상태 즉 장부를 의미하는 듯.
해당 함수에서 이더리움 상태머신에 접근해 장부를 바꾸는 트랜잭션을 생성할 수 있다는 의미??


erc 721 인터페이스
erc165는 컨트랙트가 표준 인터페이스를 구현한 것인지 확인하기 위한 표준.
erc 721은 165도 구현해야 한다는 규정이 있다.
721을 구현하는 컨트랙트는 165를 구현하여 그 여부를 확인할 수 있다.
721의 셀렉터를 전부  xor 연산을 한 값을 165함수에 전달했을 때 true가 나오면 구현했다는 것을 증명할 수 있다.
정리하면,
721 인터페이스를 구현할 때 165 함수를 하나 추가하는데 165함수는
721 함수의 셀렉터를 전부 wor연산한 16진수 값을 input으로 받아 721이 잘 구현됐다면 true를 반환해준다.

721에는 3개의 이벤트가 있다. 이벤트는 특정 행위가 이루어졌을 때 블록체인의 상태를 확인하는 용도로 사용하기도 한다.
1.transfer : 소유권 이전시
2.approval : 소유권 이전 승인시 발생(하나의 토큰)
3.approvalForAll : 소유권 이전 승인시 발생(모든 토큰)

721에는 9개의 함수가 있다.
balance of : 소유 계정의 토큰 수
owner of : 토큰의 소유 계정
safeTransferFrom : 이 함수는 입력 타입이 두개라 두개의 함수이다.
소유권 이전에 사용된다.
to의 주소가 컨트랙트일 경우 해당 컨트랙트는 onERC721Received 함수를 호출하여 그것이 함수 selector와 일치하는지 확인한다.
transferfrom : 소유권 이전, 주의해서 사용해야 한다. 전적으로 보내는 사람의 책임이다. 한 번 보내면 끝이다.
approve : 소유권 이전 승인 계정 지정(토큰 하나)
setApproveForAll : 소유권 이전 승인 계정 지정(토큰 모두)
getApproved : 소유권 이전 승인 계정 조회
isApprovedForAll : 소유권 이전 승인여부 조회.

721이외의 추가 확장 인터페이스
enumerable 발행된 토큰 관련 데이터 확인하는 인터페이스
totalsupply : 발행된 유효한 토큰의 수(파괴된 토큰은 제외한다.)
tokenbyindex : inde에 해당하는 토큰id인덱스, 이값은 항상 total supply보다 작아야 한다.
tokenofOwnerByIndex : 소유 계정이 가진 토큰 중 인덱스에 해당하는 토큰ID

metadata 이름, 심볼, 리소스 정보 확인 인터페이스
name : 토큰 이름
symbol : 토큰 심볼
tokenURI : 토큰 ID가 가리키는 리소스 정보.
