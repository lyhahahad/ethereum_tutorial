truffle에서 스마트컨트랙트를 작성하고 
ganache-cli(백 엔드)에 배포하면 사용이 가능해진다.

*하이라이트
1.truffle에서 스마트컨트랙트를 작성하고 
ganache-cli(백 엔드)에 배포하면 사용이 가능해진다.
2.truffle기본 구조.
contracts폴더에 .sol로 스컨 코드를 작성하고 truffle compile하면 json형식으로 build된다. 
migrations에서 .js파일을 통해 배포 코드를 작성하고 truffle migrate하면 ganache-cli에서 실행중인 블록체인에 배포된다.
3.dapp 설계시 고려사항.
*툴
-truffle : 프레임워크
-ganache-cli : 테스트 환경

*명령어
-'truffle init'명령어를 실행하면 contracts, migrations, test 폴더가 생성된다.
contracts 폴더에는 스마트컨트랙트 파일이 있다.
migrations 폴더에는 배포 코드가 있다.
test 폴더에는 테스트 파일이 있다. 솔리디티, js를 사용해 할 수 있는데 주로 js를 사용한다.

-'truffle compile'
contracts에 스마트 컨트랙트를 수정하거나 추가한 후 수행.
contracts 폴더의 스마트 컨트랙트를 build한다.
build 폴더가 생기는데 이는 json형식의 스마트 컨트랙트 메타데이터이다.

-'ganache-cli -d-m '니모닉''
ganache-cli는 블록체인 네트워크를 실행해 테스트 환경을 제공한다.

-'truffle migrate (--reset)'
migrations 폴더에 배포 코드를 작성한 후 실행하는 코드로 실제적으로 배포한다.
재실행시 migrations의 1번 파일이 아니라 새롭게 만들어진 번호부터 배포가 진행된다.
이때 --reset명령어를 추가하면 1번파일부터 다시 배포한다.
만약 배포가 안된다면 배포 위치가 설정되지 않았을 가능성이 높다.
truffle-config 파일의 network->development에 배포 위치를 설정할 수 있다.

-'truffle console'에서 web3관련 코드를 사용할 수 있다. ganache cli의 데이터도 확인할 수 있다.
여기서 스마트 컨트랙트를 실행할 수 있는데 이때 빌드에 있는 json 파일을 참조한다.
스컨이름.deploy().then(function(instance){lt = instance})
lt에 배포한 스마트컨트랙트 저장.
lt. tabtab하면 쓸 수 있는 함수 확인가능.
이더리움은 다른 숫자가 2의 -31승까지 가기 때문에 빅넘버를 많이 사용함.

-'truffle test'
test폴더안에 있는 파일들이 모두 실행된다.
단일 테스트일 경우 'test/파일이름'을 추가하면 된다.

*코드
-migrations 폴더의 1_0000 파일.
artifacts.require("contracts폴더의 파일 이름")
deployer.deploy("contracts폴더의 파일 이름")
스마트 컨트랙트를 배포하는 코드
1_0000파일은 건드리지 않는 것이 좋다.
변수를 public으로 만들면 게터가 자동적으로 생성돼 다른 외부에서 참조가 가능하다.
스마트컨트랙트가 배포될 때 constructor 부터 실행된다.(자바의 main과 유사)
msg.sender는 스컨에서 제공해주는 글로벌 변수이다.

*Dapp 서비스 설계
1.지갑관리.(멀티시그도 가능, 1명이 관리하는 것이 아니라 여러명이 관리하는 것.)
2.아키텍쳐.
a.스컨-프론트
b.스컨(중요한 데이터)-서버(덜 중요한 데이터 or ipfs)-프론트
3.코드
코드를 실행하는데 돈이 든다.(디도스 공격을 막기 위해 코드를 실행하는데 돈이 드는 구조이다, 튜링 완전.)
권한 관리(함수별 중요도)
비즈니스 로직 업데이트(스컨의 문제점중 하나가 업데이트 관련 문제이다. 지속적으로 변한다. 어떻게 변경할건지?,)
데이터 마이그레이션(미리 저장된 데이터를 어떻게 옮길 것인가?)
4.운영
퍼블릭 or 프라이빗


*Lottery 규칙
+3번째 블록 해쉬의 첫 두글자 맞추기.
3번에 답을 제출했다면 그 답은 7번에서 확인가능 이유는
블록이 생성되기전에 블록을 해시를 알 수 없기 때문이다.
또한 스컨에서 확인할 수 있는 블록 해시값은 256개로 제한돼 있다.
결과가 나왔을 때만 유저가 보낸 돈을 팟머니에 쌓기.
여러 명이 맞춘다면 가장 먼저 맞춘 사람이 팟머니를 가져감.
두 글자 중 하나만을 맞추었다면 보낸 돈을 돌려준다.
결과값을 검증할 수 없을 때는 돈을 돌려준다.
