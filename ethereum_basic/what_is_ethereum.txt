12/31 이더리움 아키텍쳐 부분 직관적으로 이해.https://www.preethikasireddy.com/post/the-architecture-of-a-web-3-0-application
*이더리움 이란?
모든 컴퓨터(노드라고도 함)는 서로 연결되어 있으며 코드와 데이터의 전체 복사본을 가지고 있습니다. 
이더리움 블록체인에 코드를 배포하면 코드가 네트워크의 모든 노드로 복제됩니다. 
응용 프로그램에 데이터가 저장되면 모든 노드에서 해당 데이터가 복제됩니다. 

*이더리움 아키텍쳐
dapp과 상호작용하려는 모든 사람들은 자신의 기기에 블록체인 전체 복사본이 필요합니다.
모든 사용자가 노드가 된다면 탈중앙화, 보안 모두 향상되겠지만
이것은 현실적으로 무리가 있습니다.
이런 문제를 해결하기 위해 블록체인 호스팅 서비스,메타 마스크와 같은 서비스가 나왔습니다.(블록체인 서버 호스팅 서비스)
이를 사용하면 하드디스크와 ram을 많이 사용하지 않아도 블록체인 전체 복사본을 다운로드하고 실행하면서
탈중앙화를 훼손하지 않을 수 있습니다.
-구성요소 
1.데이터 베이스 : 모든 트랜잭션을 저장한다. 
                dapp배포도 여기에 포함된다.
2.코드 : 솔리디티를 사용해 스마트 컨트랙트를 작성할 수 있다.
         이것을 바이트 코드로 컴파일한 후 블록체인에 배포한다.
즉 이더리움은 트랜잭션 + 스마트 컨트랙트 코드를 모두 저장하고 실행한다.
=>이더리움은 데이터를 저장하고 코드를 저장하며 코드를 evm에서 실행한다.
이더리움에서 웹기반 dapp을 개발할 때는 web3.js 라이브러리를 사용할 수 있다.
이 라이브러리는 블록체인 노드에 연결된다.
react.js, angular.js 등의 유명한 js 프레임워크에 이 라이브러리를 포함시킬 수도 있습니다.

*바이트코드
스마트컨트랙트는 솔리디티로 작성되고 이 코드는 evm 바이트코드로 컴파일된다.
jvm과 매우 유사하다. 

*evm
튜링 완전성을 가진 256바이트 가상 머신으로 누구나 임의의 evm 바이트코드를 실행할 수 있다.
geth, parity 등의 이더리움 클라이턴를 설치하고 실행하면 evm이 시작된다.
EVM이 트랜잭션의 동기화, 유효성 검사 및 실행을 시작합니다.

*이더리움 클라이언트 geth, parity
EVM이 트랜잭션의 동기화, 유효성 검사 및 실행을 시작합니다.
Geth를 처음 시작하면 네트워크 내의 다른 이더리움 클라이언트(노드node라고도 불림)에 연결하는 작업을 먼저 시작하고 블록체인의 전체 사본을 내려받게 됩니다.
Geth는 블록체인의 복사본을 최신 상태로 유지하기 위해 끊임없이 다른 노드와 통신합니다. 
또한 블록을 채굴하고, 블록체인에 트랜잭션을 추가하고 블록의 트랜잭션을 검증하며 트랜잭션을 실행할 수도 있습니다. 
그리고 RPC를 통해 상호작용할 수 있는 API를 노출하여 서버 역할을 하기도 합니다. 블록체인에 연결할 수 있는 자바스크립트 클라이언트(geth console)도 있습니다.

=>이더리움 클라이언트인 geth는 블록체인 노드로 블록체인 복사본을 소유하고 있고
최신 상태를 업그레이트하며 블록을 채굴할 수도 트랜잭션을 추가하고 검증할 수도 있다.
현실적으로 모든 사용자가 복사본을 들고 있는 것이 힘들기 때문에 rpc api를 제공하기도한다.
즉 우리가 사용하는 rpc url은 특정 서버에 있는 geth 노드인 것이다.
