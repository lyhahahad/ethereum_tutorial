https://www.preethikasireddy.com/post/the-architecture-of-a-web-3-0-application

*기본 구성 요소
블록체인 : p2p 노드 네트워크에 의해 유지 관리되는 전역적으로 엑세스가 가능한 결정적인 상태머신.
스마트계약 : 상태변경 논리 정의하는 프로그램.
evm : 스마트 계약에 정의된 로직을 실행하고 전역적으로 엑세스 가능한 이 상태 머신에서 발생하는 상태 변경을 처리하는 이더리움 가상머신.
      솔리디티와 같은 고급언어는 이해하지 못하기 때문에 바이트 코드로 컴파일 해야 evm 실행이 가능하다.
프론트엔드 : ui 로직 정의하는 부분 + 스마트 계약에 정의된 애플리케이션 로직과도 통신함.

*web2 vs wbe3
web2 시스템은 클라이언트-frontend-backend-database으로 이루어져있다.
클라이언트에서 요청을 보내면 중앙서버가 응답을 보내는 구조이다.
web3는 중앙서버 대신 블록체인을 활용한다.
블록체인이라고 불리는 상태머신은 매우 엄격한 규칙을 따른다.
클라이언트-frontend-(스마트 컨트랙트)evm-blockchain(여러명에 의해 공유)로 구성돼있다.

*프론트엔드 코드와 이더리움 스마트 컨트랙트의 통신 방법
이더 네트워크의 모든 노드는 모든 스마트 컨트랙트 코드 및 데이터를 포함하고 있습니다.
블록체인의 데이터 및 코드와 상호작용하려면 노드 중 하나와 상호작용해야 한다.
새 트랜잭션을 브로드캐스트하기 위해서는 노드와 소통해야 하는데 이떄 자체 노드를 설정하거나 타사 서비스를 사용하는 방법이 있다.
전체 노드를 설정하는것은 시간, 비용적으로 힘든 일이다. 때문에 타사의 서비스를 사용하는 경우가 대부분이다.
클라이언트-frontend-alchemy,infura 등 노드 제공자-(스마트 컨트랙트)evm-blockchain(여러명에 의해 공유)로 구성돼있다.
프론트엔드와 타사 노드가 통신할 떄는 json rpc 프로토콜을 사용한다.
