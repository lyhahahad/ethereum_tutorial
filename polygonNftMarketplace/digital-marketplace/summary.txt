*구조
contract : 스마트컨트랙트 폴더
test : 배포하기전에 스마트컨트랙트 테스트하는 코드 작성하는 곳
pages : 스마트컨트랙트와 소통하는 프런트 엔드
scripts : 배포코드 작성하는 곳

기타 설정 
hardhat.config.js : 어떤 네트워크에 어떤 주소로 컨트랙트를 배포할지 설정하는 곳

프론트 엔드 구축
1.pages/_app.js에 기본 프론트 구축
2.업데이트할 페이지는 pages/index.js에 구축(앱의 진입점이며 판매용 디지털 자산 쿼리하여 화면에 렌더링)
3.pages/create-item.js디지털 자산 생성하고 나열하는 페이지
-ipfs에 파일 업로드하고 저장
-nft생성
-메타데이터 및 가격 설정하여 마켓플레이스에 올리는 부분.
4.pages/my-assets.js 사용자가 구매한 항목 보기.


에러 
The Solidity version pragma statement in these files doesn't match any of the configured compilers in your config. Change the pragma or configure additional compiler versions in your hardhat config.


*프론트엔드에서 provider 설정
크게 두가지 방식이 있다.
1.메타마스크애서 제공하는 부분과 연결한다.ethers.providers.Web3Provider(window.ethereum)
2.직접 노드 url을 입력해 사용한다. ethers.providers.JsonRpcProvider